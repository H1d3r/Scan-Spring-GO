package poc

import (
	"fmt"
	"github.com/fatih/color"
	"io/ioutil"
	"net/http"
	"ssp/common"
	"strings"
	"time"
)

func CVE_2018_1273(url string) {
	headers := map[string]string{
		"User-Agent":   common.GetRandomUserAgent(),
		"Content-Type": "application/x-www-form-urlencoded",
	}

	path1 := "users"
	path2 := "users?page=0&size=5"

	client := &http.Client{
		Timeout: 10 * time.Second,
	}

	http.DefaultTransport.(*http.Transport).TLSClientConfig.InsecureSkipVerify = true

	tryPaths := []string{path1, path2}

	for _, path := range tryPaths {
		req, err := http.NewRequest("GET", url+path, nil)
		if err != nil {
			fmt.Println("Error creating request:", err)
			return
		}

		for key, value := range headers {
			req.Header.Set(key, value)
		}

		resp, err := client.Do(req)
		if err != nil {
			color.Yellow("[-] URL为：%s，的目标积极拒绝请求，予以跳过\n", url)
			return
		}
		defer resp.Body.Close()

		body, err := ioutil.ReadAll(resp.Body)
		if err != nil {
			fmt.Println("Error reading response:", err)
			return
		}

		if resp.StatusCode == 200 && strings.Contains(string(body), "Users") {
			common.PrintVulnerabilityConfirmation("CVE-2018-1273", url, "存在漏洞,由于该漏洞无回显，请用Dnslog进行测试", "1")
			common.Vulnum++
			return
		}
	}

	color.Yellow("[-] %s 未发现CVE-2018-1273远程命令执行漏洞\n", url)
}
